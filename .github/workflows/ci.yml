name: Continuous Integration

on:
  push:
    branches:
      - '**'
    tags:
      - '!**' # Don't run twice on commits with tags
    paths-ignore:
      - 'helpers/**'
      - 'docker/**'
      - '.github/**'
      - '**.Dockerfile'
      - '**.md'
  pull_request:
  schedule:
    - cron: '15 6 * * 2'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    name: 'Test on Linux'
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Init Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Fmt, Clippy and Test
        run: ./helpers/test.sh

      - name: Install Cargo Coverage
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Cargo Coverage
        run: cargo llvm-cov test --bins --all-features --tests --lcov --output-path ./lcov.info

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  windows:
    name: 'Test on Windows'
    runs-on: windows-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Init Cache
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\.cargo\bin\
            C:\Users\runneradmin\.cargo\registry\index\
            C:\Users\runneradmin\.cargo\registry\cache\
            C:\Users\runneradmin\.cargo\git\db\
            target\
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Fmt, Clippy and Test
        shell: pwsh
        run: |
          Set-Location $env:GITHUB_WORKSPACE
          .\helpers\test_windows.ps1
